<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.teamar.genki.pos.basic.dao.FoodExCommodityMapper" >
  <resultMap id="BaseResultMap" type="cn.teamar.genki.pos.basic.po.FoodExCommodity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="g_id" property="gId" jdbcType="BIGINT" />
    <result column="b_id" property="bId" jdbcType="BIGINT" />
    <result column="s_id" property="sId" jdbcType="BIGINT" />
    <result column="base_commodity_id" property="baseCommodityId" jdbcType="BIGINT" />
    <result column="base_commodity_name" property="baseCommodityName" jdbcType="VARCHAR" />
    <result column="commodity_name" property="commodityName" jdbcType="VARCHAR" />
    <result column="commodity_english_name" property="commodityEnglishName" jdbcType="VARCHAR" />
    <result column="quickCode" property="quickCode" jdbcType="VARCHAR" />
    <result column="sort_code" property="sortCode" jdbcType="TINYINT" />
    <result column="category_id" property="categoryId" jdbcType="BIGINT" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="is_combo" property="isCombo" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="package_price" property="packagePrice" jdbcType="BIGINT" />
    <result column="setMenu_count" property="setmenuCount" jdbcType="BIGINT" />
    <result column="setMenu_select" property="setmenuSelect" jdbcType="BIGINT" />
    <result column="allocationPlan" property="allocationplan" jdbcType="VARCHAR" />
    <result column="base_category_id" property="baseCategoryId" jdbcType="BIGINT" />
    <result column="base_category_name" property="baseCategoryName" jdbcType="VARCHAR" />
    <result column="base_type_id" property="baseTypeId" jdbcType="BIGINT" />
    <result column="base_type_name" property="baseTypeName" jdbcType="VARCHAR" />
    <result column="unit_id" property="unitId" jdbcType="BIGINT" />
    <result column="unit_name" property="unitName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, G_ID, B_ID, S_ID, BASE_COMMODITY_ID, BASE_COMMODITY_NAME, COMMODITY_NAME, COMMODITY_ENGLISH_NAME,QUICKCODE,
    SORT_CODE, CATEGORY_ID, TYPE_ID, IS_COMBO, STATE, PACKAGE_PRICE, SETMENU_COUNT, SETMENU_SELECT,
    ALLOCATIONPLAN, BASE_CATEGORY_ID, BASE_CATEGORY_NAME, BASE_TYPE_ID, BASE_TYPE_NAME,UNIT_ID,UNIT_NAME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.teamar.genki.pos.basic.po.FoodExCommodityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from food_ex_commodity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from food_ex_commodity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from food_ex_commodity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.teamar.genki.pos.basic.po.FoodExCommodityExample" >
    delete from food_ex_commodity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.teamar.genki.pos.basic.po.FoodExCommodity" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
      select @@IDENTITY as id
    </selectKey>
    insert into food_ex_commodity (ID, G_ID, B_ID, S_ID,
    BASE_COMMODITY_ID, BASE_COMMODITY_NAME, COMMODITY_NAME,
    COMMODITY_ENGLISH_NAME,QUICKCODE, SORT_CODE, CATEGORY_ID,
    TYPE_ID, IS_COMBO, STATE,
    PACKAGE_PRICE, SETMENU_COUNT, SETMENU_SELECT,
    ALLOCATIONPLAN, BASE_CATEGORY_ID, BASE_CATEGORY_NAME,
    BASE_TYPE_ID, BASE_TYPE_NAME,UNIT_ID,UNIT_NAME)
    values (#{id,jdbcType=BIGINT}, #{gId,jdbcType=BIGINT}, #{bId,jdbcType=BIGINT}, #{sId,jdbcType=BIGINT},
    #{baseCommodityId,jdbcType=BIGINT}, #{baseCommodityName,jdbcType=VARCHAR}, #{commodityName,jdbcType=VARCHAR},
    #{commodityEnglishName,jdbcType=VARCHAR},#{quickCode,jdbcType=VARCHAR}, #{sortCode,jdbcType=TINYINT}, #{categoryId,jdbcType=BIGINT},
    #{typeId,jdbcType=BIGINT}, #{isCombo,jdbcType=TINYINT}, #{state,jdbcType=TINYINT},
    #{packagePrice,jdbcType=BIGINT}, #{setmenuCount,jdbcType=BIGINT}, #{setmenuSelect,jdbcType=BIGINT},
    #{allocationplan,jdbcType=VARCHAR}, #{baseCategoryId,jdbcType=BIGINT}, #{baseCategoryName,jdbcType=VARCHAR},
    #{baseTypeId,jdbcType=BIGINT}, #{baseTypeName,jdbcType=VARCHAR}, #{unitId,jdbcType=BIGINT}, #{unitName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.teamar.genki.pos.basic.po.FoodExCommodity" >
    insert into food_ex_commodity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gId != null" >
        g_id,
      </if>
      <if test="bId != null" >
        b_id,
      </if>
      <if test="sId != null" >
        s_id,
      </if>
      <if test="baseCommodityId != null" >
        base_commodity_id,
      </if>
      <if test="baseCommodityName != null" >
        base_commodity_name,
      </if>
      <if test="commodityName != null" >
        commodity_name,
      </if>
      <if test="commodityEnglishName != null" >
        commodity_english_name,
      </if>
      <if test="quickCode != null" >
        quickCode,
      </if>
      <if test="sortCode != null" >
        sort_code,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="isCombo != null" >
        is_combo,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="packagePrice != null" >
        package_price,
      </if>
      <if test="setmenuCount != null" >
        setMenu_count,
      </if>
      <if test="setmenuSelect != null" >
        setMenu_select,
      </if>
      <if test="allocationplan != null" >
        allocationPlan,
      </if>
      <if test="baseCategoryId != null" >
        base_category_id,
      </if>
      <if test="baseCategoryName != null" >
        base_category_name,
      </if>
      <if test="baseTypeId != null" >
        base_type_id,
      </if>
      <if test="baseTypeName != null" >
        base_type_name,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
      <if test="unitName != null" >
        unit_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gId != null" >
        #{gId,jdbcType=BIGINT},
      </if>
      <if test="bId != null" >
        #{bId,jdbcType=BIGINT},
      </if>
      <if test="sId != null" >
        #{sId,jdbcType=BIGINT},
      </if>
      <if test="baseCommodityId != null" >
        #{baseCommodityId,jdbcType=BIGINT},
      </if>
      <if test="baseCommodityName != null" >
        #{baseCommodityName,jdbcType=VARCHAR},
      </if>
      <if test="commodityName != null" >
        #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="commodityEnglishName != null" >
        #{commodityEnglishName,jdbcType=VARCHAR},
      </if>
      <if test="quickCode != null" >
        #{quickCode,jdbcType=VARCHAR},
      </if>
      <if test="sortCode != null" >
        #{sortCode,jdbcType=TINYINT},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="isCombo != null" >
        #{isCombo,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="packagePrice != null" >
        #{packagePrice,jdbcType=BIGINT},
      </if>
      <if test="setmenuCount != null" >
        #{setmenuCount,jdbcType=BIGINT},
      </if>
      <if test="setmenuSelect != null" >
        #{setmenuSelect,jdbcType=BIGINT},
      </if>
      <if test="allocationplan != null" >
        #{allocationplan,jdbcType=VARCHAR},
      </if>
      <if test="baseCategoryId != null" >
        #{baseCategoryId,jdbcType=BIGINT},
      </if>
      <if test="baseCategoryName != null" >
        #{baseCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="baseTypeId != null" >
        #{baseTypeId,jdbcType=BIGINT},
      </if>
      <if test="baseTypeName != null" >
        #{baseTypeName,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=BIGINT},
      </if>
      <if test="unitName != null" >
        #{unitName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.teamar.genki.pos.basic.po.FoodExCommodityExample" resultType="java.lang.Integer" >
    select count(*) from food_ex_commodity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update food_ex_commodity
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gId != null" >
        g_id = #{record.gId,jdbcType=BIGINT},
      </if>
      <if test="record.bId != null" >
        b_id = #{record.bId,jdbcType=BIGINT},
      </if>
      <if test="record.sId != null" >
        s_id = #{record.sId,jdbcType=BIGINT},
      </if>
      <if test="record.baseCommodityId != null" >
        base_commodity_id = #{record.baseCommodityId,jdbcType=BIGINT},
      </if>
      <if test="record.baseCommodityName != null" >
        base_commodity_name = #{record.baseCommodityName,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityName != null" >
        commodity_name = #{record.commodityName,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityEnglishName != null" >
        commodity_english_name = #{record.commodityEnglishName,jdbcType=VARCHAR},
      </if>
      <if test="record.quickCode != null" >
        quickCode = #{record.quickCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sortCode != null" >
        sort_code = #{record.sortCode,jdbcType=TINYINT},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=BIGINT},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.isCombo != null" >
        is_combo = #{record.isCombo,jdbcType=TINYINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.packagePrice != null" >
        package_price = #{record.packagePrice,jdbcType=BIGINT},
      </if>
      <if test="record.setmenuCount != null" >
        setMenu_count = #{record.setmenuCount,jdbcType=BIGINT},
      </if>
      <if test="record.setmenuSelect != null" >
        setMenu_select = #{record.setmenuSelect,jdbcType=BIGINT},
      </if>
      <if test="record.allocationplan != null" >
        allocationPlan = #{record.allocationplan,jdbcType=VARCHAR},
      </if>
      <if test="record.baseCategoryId != null" >
        base_category_id = #{record.baseCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.baseCategoryName != null" >
        base_category_name = #{record.baseCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.baseTypeId != null" >
        base_type_id = #{record.baseTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.baseTypeName != null" >
        base_type_name = #{record.baseTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null" >
        unit_id = #{record.unitId,jdbcType=BIGINT},
      </if>
      <if test="record.unitName != null" >
        unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update food_ex_commodity
    set id = #{record.id,jdbcType=BIGINT},
    g_id = #{record.gId,jdbcType=BIGINT},
    b_id = #{record.bId,jdbcType=BIGINT},
    s_id = #{record.sId,jdbcType=BIGINT},
    base_commodity_id = #{record.baseCommodityId,jdbcType=BIGINT},
    base_commodity_name = #{record.baseCommodityName,jdbcType=VARCHAR},
    commodity_name = #{record.commodityName,jdbcType=VARCHAR},
    commodity_english_name = #{record.commodityEnglishName,jdbcType=VARCHAR},
    quickCode = #{record.quickCode,jdbcType=VARCHAR},
    sort_code = #{record.sortCode,jdbcType=TINYINT},
    category_id = #{record.categoryId,jdbcType=BIGINT},
    type_id = #{record.typeId,jdbcType=BIGINT},
    is_combo = #{record.isCombo,jdbcType=TINYINT},
    state = #{record.state,jdbcType=TINYINT},
    package_price = #{record.packagePrice,jdbcType=BIGINT},
    setMenu_count = #{record.setmenuCount,jdbcType=BIGINT},
    setMenu_select = #{record.setmenuSelect,jdbcType=BIGINT},
    allocationPlan = #{record.allocationplan,jdbcType=VARCHAR},
    base_category_id = #{record.baseCategoryId,jdbcType=BIGINT},
    base_category_name = #{record.baseCategoryName,jdbcType=VARCHAR},
    base_type_id = #{record.baseTypeId,jdbcType=BIGINT},
    base_type_name = #{record.baseTypeName,jdbcType=VARCHAR},
    unit_id = #{record.unitId,jdbcType=BIGINT},
    unit_name = #{record.unitName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.teamar.genki.pos.basic.po.FoodExCommodity" >
    update food_ex_commodity
    <set >
      <if test="gId != null" >
        g_id = #{gId,jdbcType=BIGINT},
      </if>
      <if test="bId != null" >
        b_id = #{bId,jdbcType=BIGINT},
      </if>
      <if test="sId != null" >
        s_id = #{sId,jdbcType=BIGINT},
      </if>
      <if test="baseCommodityId != null" >
        base_commodity_id = #{baseCommodityId,jdbcType=BIGINT},
      </if>
      <if test="baseCommodityName != null" >
        base_commodity_name = #{baseCommodityName,jdbcType=VARCHAR},
      </if>
      <if test="commodityName != null" >
        commodity_name = #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="commodityEnglishName != null" >
        commodity_english_name = #{commodityEnglishName,jdbcType=VARCHAR},
      </if>
      <if test="quickCode != null" >
        quickCode = #{quickCode,jdbcType=VARCHAR},
      </if>
      <if test="sortCode != null" >
        sort_code = #{sortCode,jdbcType=TINYINT},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="isCombo != null" >
        is_combo = #{isCombo,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="packagePrice != null" >
        package_price = #{packagePrice,jdbcType=BIGINT},
      </if>
      <if test="setmenuCount != null" >
        setMenu_count = #{setmenuCount,jdbcType=BIGINT},
      </if>
      <if test="setmenuSelect != null" >
        setMenu_select = #{setmenuSelect,jdbcType=BIGINT},
      </if>
      <if test="allocationplan != null" >
        allocationPlan = #{allocationplan,jdbcType=VARCHAR},
      </if>
      <if test="baseCategoryId != null" >
        base_category_id = #{baseCategoryId,jdbcType=BIGINT},
      </if>
      <if test="baseCategoryName != null" >
        base_category_name = #{baseCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="baseTypeId != null" >
        base_type_id = #{baseTypeId,jdbcType=BIGINT},
      </if>
      <if test="baseTypeName != null" >
        base_type_name = #{baseTypeName,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
      <if test="unitName != null" >
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.teamar.genki.pos.basic.po.FoodExCommodity" >
    update food_ex_commodity
    set g_id = #{gId,jdbcType=BIGINT},
      b_id = #{bId,jdbcType=BIGINT},
      s_id = #{sId,jdbcType=BIGINT},
      base_commodity_id = #{baseCommodityId,jdbcType=BIGINT},
      base_commodity_name = #{baseCommodityName,jdbcType=VARCHAR},
      commodity_name = #{commodityName,jdbcType=VARCHAR},
      commodity_english_name = #{commodityEnglishName,jdbcType=VARCHAR},
      quickCode = #{quickCode,jdbcType=VARCHAR},
      sort_code = #{sortCode,jdbcType=TINYINT},
      category_id = #{categoryId,jdbcType=BIGINT},
      type_id = #{typeId,jdbcType=BIGINT},
      is_combo = #{isCombo,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      package_price = #{packagePrice,jdbcType=BIGINT},
      setMenu_count = #{setmenuCount,jdbcType=BIGINT},
      setMenu_select = #{setmenuSelect,jdbcType=BIGINT},
      allocationPlan = #{allocationplan,jdbcType=VARCHAR},
      base_category_id = #{baseCategoryId,jdbcType=BIGINT},
      base_category_name = #{baseCategoryName,jdbcType=VARCHAR},
      base_type_id = #{baseTypeId,jdbcType=BIGINT},
      base_type_name = #{baseTypeName,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=BIGINT},
      unit_name = #{unitName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>